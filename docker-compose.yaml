services:
  jvbuster:
    image: ghcr.io/connect-club/connectclub-jvbuster:master-snapshot
    environment:
      PORT: 80
      SPRING_PROFILES_ACTIVE: docker-jvb
      MYSQL_HOST: jvbuster-db
      MYSQL_USERNAME: jvbuster-user
      MYSQL_PASSWORD: jvbuster-pass
      REDIS_HOST: redis
      JVB_DOCKER_HOST_ADDRESS: ${DOCKER_HOST_ADDRESS:?err}
      JVB_DOCKER_IMAGE: ghcr.io/connect-club/jitsi-videobridge:master-snapshot
      JVB_MIN_POOL_SIZE: 1
      JVB_AUDIO_PROCESSOR_HTTP_URL: http://rtp-audio-processor:8888/
      JVB_AUDIO_PROCESSOR_IP: rtp-audio-processor
      SECURITY_JWT_PUBLIC_KEY: |
        -----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKRCvyuWidgIZGVf/MuO0MLJIJyuArLo
        1+JYSHkmNtj7nvHXvXg4U7/yvYLSczYbyYQuGYiRNgUtEsyrCXDpyX0CAwEAAQ==
        -----END PUBLIC KEY-----
    ports:
      - "8090:80"
    depends_on:
      jvbuster-db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # to start jvb

  jvbuster-db:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: jvbuster
      MYSQL_USER: jvbuster-user
      MYSQL_PASSWORD: jvbuster-pass
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - jvbuster-db-data:/var/lib/mysql

  api-init-db:
    image: ghcr.io/connect-club/connectclub-api:master-snapshot
    environment:
      APP_ENV: prod
      GOOGLE_CLOUD_STORAGE_BUCKET: api-files
      DATABASE_URL: postgresql://primary-user:primary-pass@primary-db/primary
      DATATRACK_URL: ws://${DOCKER_HOST_ADDRESS:?err}:8092/ws
      DATATRACK_API_URL: http://datatrack:8083
    entrypoint:
      - /bin/bash
      - -c
      - bin/console doctrine:migrations:migrate -n --allow-no-migration
    depends_on:
      primary-db:
        condition: service_healthy

  api:
    image: ghcr.io/connect-club/connectclub-api:master-snapshot
    environment:
      APP_ENV: prod
      STAGE: 1
      TEST_PHONE_PREFIX: "+7907"
      ELASTICSEARCH_HOST: http://elasticsearch:9200
      RTP_AUDIO_HOST: http://rtp-audio-processor:8888
      DATABASE_URL: postgresql://primary-user:primary-pass@primary-db/primary
      REDIS_URL: redis://redis
      LOCK_DSN: redis://redis
      MESSENGER_TRANSPORT_DSN: amqp://rabbitmq-user:rabbitmq-pass@rabbitmq:5672/%2f/messages
      JITSI_SERVER: http://${DOCKER_HOST_ADDRESS:?err}:8090
      PEOPLE_MATCHING_URL: http://peoplematchingbackend:8000
      JOIN_DISCORD_LINK: join-discord-link
      GOOGLE_CLOUD_STORAGE_PROJECT_ID: cnnct-project-id
      GOOGLE_CLOUD_STORAGE_EMULATOR_HOST: http://storage:80
      GOOGLE_CLOUD_STORAGE_BUCKET: api-files
      GOOGLE_CLOUD_STORAGE_BUCKET_MOBILE_APP_LOGS: api-files-mobile-app-logs
      JWT_TOKEN_PRIVATE_KEY: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIBOgIBAAJBAKRCvyuWidgIZGVf/MuO0MLJIJyuArLo1+JYSHkmNtj7nvHXvXg4
        U7/yvYLSczYbyYQuGYiRNgUtEsyrCXDpyX0CAwEAAQJAYctDWcYUZ0QH0bsmHGL4
        sx9fhSisfqvV6/I3o7k2qlOet0rN5eqJgJplUa6hES4l7nWEZsOeGnqqGsiVl0En
        WQIhAOO4WI05XB+stloFASVhP+8mF4AuKp+Sa/o2sVVEys0fAiEAuKjoMnwV05tT
        jLvfYRHeaurJnm33OjmkQ0n3p39WOeMCIDGIFILLWjVtjNBxzDkEOTLcdzojUJQa
        9i+bm+DvMKmDAiBal8MSwX2Tyug6axEz9ihAG9++MgTQM+c6e9db/US4MQIhAMv5
        m+773CtZrfB2zAAPDUKT1/QA5GI6y/4pZNJDkAU8
        -----END RSA PRIVATE KEY-----
      TWILIO_AUTH_SID: empty
      TWILIO_AUTH_TOKEN: empty
      VONAGE_API_KEY: empty
      VONAGE_API_SECRET: empty
      AMPLITUDE_ENABLE: 0
      AMPLITUDE_API_KEY: empty
      AMPLITUDE_LEGACY_API_KEY: empty
      DISABLE_SMS_IP_VERIFICATION: 1
      IMAGE_RESIZER_BASE_URL: "http://${DOCKER_HOST_ADDRESS:?err}:8093"
      SUPERVISOR_CONFIG: |
        [supervisord]
        nodaemon=true

        [program:fpm]
        command=php-fpm -F
        stdout_logfile=/dev/fd/1
        stdout_logfile_maxbytes=0
        stderr_logfile=/dev/fd/1
        stderr_logfile_maxbytes=0

        [program:messenger-notifications]
        command=php -d memory_limit=512M bin/console messenger:consume async_send_notifications --failure-limit=1
        stdout_logfile=/dev/fd/1
        stdout_logfile_maxbytes=0
        stderr_logfile=/dev/fd/1
        stderr_logfile_maxbytes=0

        [program:messenger-async]
        command=php -d memory_limit=512M bin/console messenger:consume async --failure-limit=1
        stdout_logfile=/dev/fd/1
        stdout_logfile_maxbytes=0
        stderr_logfile=/dev/fd/1
        stderr_logfile_maxbytes=0

        [program:messenger-async-low-priority]
        command=php -d memory_limit=512M bin/console messenger:consume async_low_priority --failure-limit=100
        stdout_logfile=/dev/fd/1
        stdout_logfile_maxbytes=0
        stderr_logfile=/dev/fd/1
        stderr_logfile_maxbytes=0

        [program:messenger-push-sender]
        command=php -d memory_limit=512M bin/console messenger:consume push_sender --failure-limit=1000
        stdout_logfile=/dev/fd/1
        stdout_logfile_maxbytes=0
        stderr_logfile=/dev/fd/1
        stderr_logfile_maxbytes=0
    entrypoint:
      - /bin/bash
      - -c
      - apk --update --no-cache add supervisor && echo "$$SUPERVISOR_CONFIG" > /etc/supervisord.conf && exec supervisord -c /etc/supervisord.conf
    depends_on:
      api-init-db:
        condition: service_completed_successfully
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  api-web:
    image: ghcr.io/connect-club/connectclub-api:master-snapshot
    environment:
      NGINX_CONF: |
        server {
          listen 80;
          server_name web;
          root /var/www/public;
          client_max_body_size 10M;

          add_header Allow "GET, PUT, POST, DELETE, PATCH, OPTIONS";
          add_header Access-Control-Allow-Headers "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization";
          add_header Access-Control-Allow-Origin "*";

          location / {
              if ($$request_method = 'OPTIONS') {
                  return 204;
              }
              # try to serve file directly, fallback to index.php
              try_files $$uri /index.php$$is_args$$args;
          }

          location ~ ^/index\.php(/|$$) {
              fastcgi_pass api:9000;
              fastcgi_split_path_info ^(.+\.php)(/.*)$$;
              include fastcgi_params;
              fastcgi_param SCRIPT_FILENAME $$realpath_root$$fastcgi_script_name;
              fastcgi_param DOCUMENT_ROOT $$realpath_root;
              fastcgi_buffer_size 128k;
              fastcgi_buffers 4 256k;
              fastcgi_busy_buffers_size 256k;
              internal;
          }

          location ~ \.php$$ {
              return 404;
          }

          error_log /var/log/nginx/project_error.log;
          access_log /var/log/nginx/project_access.log;
        }
    entrypoint:
      - /bin/bash
      - -c
      - apk --update --no-cache add nginx && echo "$$NGINX_CONF" > /etc/nginx/conf.d/default.conf && exec nginx -g 'pid /tmp/nginx.pid; daemon off;'
    ports:
      - "8091:80"
    depends_on:
      api:
        condition: service_started

  datatrack:
    image: ghcr.io/connect-club/connectclub-datatrack:master-snapshot
    ports:
      - "8092:8080"
    environment:
      INGRESS_HOST: datatrack #todo
      GCLOUD_PROJECT_ID: cnnct-project-id
      PUBSUB_EMULATOR_HOST: pubsub:8432
      DISABLE_NEWRELIC: 'true'
      DATATRACK_APIURL: http://api-web

  peoplematchingbackend:
    image: ghcr.io/connect-club/connectclub-peoplematchingbackend:master-snapshot
    environment:
      IMAGE_RESIZER_BASE_URL: "http://${DOCKER_HOST_ADDRESS:?err}:8093"
      NODE_ENV: stage
      NODE_OPTIONS: --max_old_space_size=4096
      MESSENGER_TRANSPORT_DSN: amqp://rabbitmq-user:rabbitmq-pass@rabbitmq:5672/%2f
      MORALIS_KEY: g1YjW5BRYpJ6r0ghoa9jNpBl4psZwITanU4vAzsgVVmPPBWr4AbIcz9rDSCxmNNP
      NEO4J_URL: neo4j://neo4j
      NEO4J_USER: neo4j
      NEO4J_PASS: neo4j-pass
      POSTGRES_HOST: primary-db
      POSTGRES_DB: primary
      POSTGRES_USER: primary-user
      POSTGRES_PASS: primary-pass
    depends_on:
      api-init-db:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      neo4j:
        condition: service_healthy

  web:
    image: ghcr.io/connect-club/connectclub-web:master-snapshot
    ports:
      - "8094:3000"
    environment:
      API_PATH: http://${DOCKER_HOST_ADDRESS:?err}:8091
      PICS_DOMAIN: ${DOCKER_HOST_ADDRESS:?err}
      COOKIE_OPTIONS_SECURE: 'false'
      POSTGRES_MAIN_DB: primary
      POSTGRES_MAIN_HOST: primary-db
      POSTGRES_MAIN_USER: primary-user
      POSTGRES_MAIN_PASS: primary-pass

  redis:
    image: redis:5.0-alpine

  pubsub:
    image: markkrijgsman/pubsub
    environment:
      PUBSUB_PROJECT_ID: cnnct-project-id
      PUBSUB_CONFIG: '[{"name": "datatrack", "subscriptions": ["rtp-audio-processor-sub-id"]}]'

  storage:
    image: ghcr.io/connect-club/fake-gcs-server
    volumes:
      - "./gcs-data:/data"
      - gcs-data:/storage
    command: ["-scheme", "http", "-port", "80"]

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq-user
      RABBITMQ_DEFAULT_PASS: rabbitmq-pass
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3

  primary-db:
    image: postgres:11
    environment:
      POSTGRES_DB: primary
      POSTGRES_USER: primary-user
      POSTGRES_PASSWORD: primary-pass
      PGDATABASE: primary # to avoid 'FATAL:  database does not exist'
      PGUSER: primary-user # to avoid 'FATAL:  role does not exist'
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - primary-db-data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:7.12.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 262144
        hard: 262144
    environment:
      xpack.security.enabled: 'false'
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms750m -Xmx750m

  neo4j:
    image: neo4j:4.4.3-enterprise
    environment:
      NEO4J_AUTH: neo4j/neo4j-pass
      NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_apoc_import_file_use__neo4j__config: 'true'

      NEO4J_metrics_csv_enabled: 'false'
      NEO4J_metrics_graphite_enabled: 'false'
      NEO4J_metrics_jmx_enabled: 'false'

      NEO4J_dbms_allow__upgrade: 'true'
      NEO4J_dbms_backup_enabled: 'false'
      NEO4J_dbms_connector_bolt_connection__keep__alive__for__requests: ALL
      NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
      NEO4J_dbms_connector_https_listen__address: 0.0.0.0:7473
      NEO4J_dbms_default__database: neo4j
      NEO4J_dbms_jvm_additional: -XX:+ExitOnOutOfMemoryError
      NEO4J_dbms_routing_client__side_enforce__for__domains: "*.cluster.local"
      NEO4J_dbms_routing_default__router: SERVER
      NEO4J_dbms_routing_enabled: 'true'
      NEO4J_dbms_routing_listen__address: 0.0.0.0:7688
      NEO4J_dbms_directories_logs: /data/logs
      NEO4J_dbms_mode: SINGLE
    healthcheck:
        test: wget http://localhost:7474 || exit 1
        interval: 1s
        timeout: 10s
        retries: 20
        start_period: 3s
    volumes:
      - neo4j-data:/data

  nginx-resizer:
    image: ghcr.io/connect-club/connectclub-nginx-resizer:master-snapshot
    ports:
      - "8093:3000"
    environment:
      SET_REAL_IP_FROM: 192.168.0.0/16
      STORAGE_SCHEME: http
      STORAGE_SERVER: storage
      STORAGE_PORT: 80
      STORAGE_BUCKET: api-files
    depends_on:
      storage:
        condition: service_started

volumes:
  primary-db-data:
    driver: local
  jvbuster-db-data:
    driver: local
  neo4j-data:
    driver: local
  gcs-data:
    driver: local